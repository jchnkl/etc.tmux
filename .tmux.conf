# global options
set-option -g default-terminal screen-256color-it
set-option -g status-keys vi
set-option -g visual-bell off
set-option -g display-time 5000
set-option -g history-limit 10000
set-option -ag update-environment " XAUTHORITY XWORKSPACE"

# server options
set-option -s -g escape-time 250
set-option -g repeat-time 1000
set-option -g mouse-utf8 on

# window options
set-window-option -g utf8 on
set-window-option -g mode-keys vi
set-window-option -g automatic-rename off
set-window-option -g aggressive-resize on
#set-window-option -g mode-mouse on

# status bar information on right-hand side
# set-option -g status-right '%a %b %d, %H:%M'
set-option -g status-interval 60
set-option -g status-right "#(echo -n \"`TERM=vt100; zsh -c 'source ~/.zshrc; updateWeather; updateBattery; updatePrompt; buildPrompt; print -P \${RPROMPT}'`\" | tr -d '\n')"
set-option -g status-right-length 100
if-shell '[ -n "$XWORKSPACE" ]' 'set-option -g status-left "[$XWORKSPACE]"'

#### solarized COLOURS
# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# colours
#set-option -g status-fg colour250
#set-option -g status-bg colour59
#set-option -g message-fg colour250
#set-option -g message-bg colour59
#set-option -g pane-border-fg colour250
#set-option -g pane-border-bg colour59
#set-option -g pane-active-border-fg colour250
#set-option -g pane-active-border-bg colour59
#set-option -g display-panes-colour colour59
#set-option -g display-panes-active-colour colour250

unbind ^[
bind ^[ copy-mode
unbind ^]
bind ^] paste-buffer

unbind o
bind o break-pane
unbind r
bind -r r rotate-window
unbind R
bind -r R rotate-window -D
unbind L
bind -r L next-layout

unbind -t vi-copy Escape
bind -t vi-copy Escape cancel
unbind -t vi-choice Escape
bind -t vi-choice Escape cancel
unbind -t vi-edit C-u
bind -t vi-edit C-u delete-line
unbind -c -t vi-edit C-u
bind -c -t vi-edit C-u delete-line

# settings from example/screen-keys.conf
# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# kill-session ^D / detach d
unbind ^D
bind ^D kill-session

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^N
bind -r ^N next-window
unbind n
bind -r n next-window
unbind Space
bind -r Space next-window
unbind ^Space
bind -r ^Space next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^P
bind -r ^P previous-window
unbind p
bind -r p previous-window
unbind BSpace
bind -r BSpace previous-window
unbind ^BSpace
bind -r ^BSpace previous-window

# windows ^W w
unbind ^W
bind ^W choose-window
unbind w
bind w choose-window

# sessions S
unbind S
bind S choose-session

# quit \
unbind K
bind K confirm-before "kill-server"

# redisplay ^L l
unbind ^L
bind ^L refresh-client

# :kB: focus up
unbind Tab
bind -r Tab select-pane -t:.+
unbind BTab
bind -r BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' list-window

# settings from example/vim-keys.conf
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
unbind s
bind s split-window -v
unbind v
bind v split-window -h

# move around panes with j and k, a bit like vim
# as of tmux 1.1, there is no way to move based on pane position (ie, no way to
# move the pane to the right)
unbind j
bind -r j select-pane -D
unbind k
bind -r k select-pane -U
unbind h
bind -r h select-pane -L
unbind l
bind -r l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
unbind <
bind -r < resize-pane -L 5
unbind >
bind -r > resize-pane -R 5
unbind -
bind -r - resize-pane -D 5
unbind +
bind -r + resize-pane -U 5
