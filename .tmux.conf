# unbind -a

# default keybindings from
# http://sourceforge.net/p/tmux/tmux-code/ci/master/tree/key-bindings.c
# { ' ',  0, &cmd_next_layout_entry },
# { '!', 0, &cmd_break_pane_entry },
# { '"', 0, &cmd_split_window_entry },
# { '#', 0, &cmd_list_buffers_entry },
# { '$',  0, &cmd_command_prompt_entry },
# { '%', 0, &cmd_split_window_entry },
# { '&', 0, &cmd_confirm_before_entry },
# { '(', 0, &cmd_switch_client_entry },
# { ')', 0, &cmd_switch_client_entry },
# { ',', 0, &cmd_command_prompt_entry },
# { '-', 0, &cmd_delete_buffer_entry },
# { '.', 0, &cmd_command_prompt_entry },
# { '0', 0, &cmd_select_window_entry },
# { '1', 0, &cmd_select_window_entry },
# { '2', 0, &cmd_select_window_entry },
# { '3', 0, &cmd_select_window_entry },
# { '4', 0, &cmd_select_window_entry },
# { '5', 0, &cmd_select_window_entry },
# { '6', 0, &cmd_select_window_entry },
# { '7', 0, &cmd_select_window_entry },
# { '8', 0, &cmd_select_window_entry },
# { '9', 0, &cmd_select_window_entry },
# { ':', 0, &cmd_command_prompt_entry },
# { ';', 0, &cmd_last_pane_entry },
# { '=', 0, &cmd_choose_buffer_entry },
# { '?', 0, &cmd_list_keys_entry },
# { 'D',  0, &cmd_choose_client_entry },
# { 'L',  0, &cmd_switch_client_entry },
# { '[', 0, &cmd_copy_mode_entry },
# { '\'', 0, &cmd_command_prompt_entry },
# { '\002', /* C-b */ 0, &cmd_send_prefix_entry },
# { '\017', /* C-o */ 0, &cmd_rotate_window_entry },
# { '\032', /* C-z */ 0, &cmd_suspend_client_entry },
# { ']', 0, &cmd_paste_buffer_entry },
# { 'c', 0, &cmd_new_window_entry },
# { 'd', 0, &cmd_detach_client_entry },
# { 'f', 0, &cmd_command_prompt_entry },
# { 'i',  0, &cmd_display_message_entry },
# { 'l', 0, &cmd_last_window_entry },
# { 'n', 0, &cmd_next_window_entry },
# { 'o', 0, &cmd_select_pane_entry },
# { 'p', 0, &cmd_previous_window_entry },
# { 'q',  0, &cmd_display_panes_entry },
# { 'r', 0, &cmd_refresh_client_entry },
# { 's', 0, &cmd_choose_tree_entry },
# { 't', 0, &cmd_clock_mode_entry },
# { 'w', 0, &cmd_choose_window_entry },
# { 'x', 0, &cmd_confirm_before_entry },
# { 'z',  0, &cmd_resize_pane_entry },
# { '{',  0, &cmd_swap_pane_entry },
# { '}',  0, &cmd_swap_pane_entry },
# { '~',  0, &cmd_show_messages_entry },
# { '1' | KEYC_ESCAPE,  0, &cmd_select_layout_entry },
# { '2' | KEYC_ESCAPE,  0, &cmd_select_layout_entry },
# { '3' | KEYC_ESCAPE,  0, &cmd_select_layout_entry },
# { '4' | KEYC_ESCAPE,  0, &cmd_select_layout_entry },
# { '5' | KEYC_ESCAPE,  0, &cmd_select_layout_entry },
# { KEYC_PPAGE, 0, &cmd_copy_mode_entry },
# { 'n' | KEYC_ESCAPE, 0, &cmd_next_window_entry },
# { 'o' | KEYC_ESCAPE,  0, &cmd_rotate_window_entry },
# { 'p' | KEYC_ESCAPE, 0, &cmd_previous_window_entry },
# { KEYC_UP, 1, &cmd_select_pane_entry },
# { KEYC_DOWN, 1, &cmd_select_pane_entry },
# { KEYC_LEFT, 1, &cmd_select_pane_entry },
# { KEYC_RIGHT, 1, &cmd_select_pane_entry },
# { KEYC_UP | KEYC_ESCAPE, 1, &cmd_resize_pane_entry },
# { KEYC_DOWN | KEYC_ESCAPE, 1, &cmd_resize_pane_entry },
# { KEYC_LEFT | KEYC_ESCAPE, 1, &cmd_resize_pane_entry },
# { KEYC_RIGHT | KEYC_ESCAPE, 1, &cmd_resize_pane_entry },
# { KEYC_UP | KEYC_CTRL, 1, &cmd_resize_pane_entry },
# { KEYC_DOWN | KEYC_CTRL, 1, &cmd_resize_pane_entry },
# { KEYC_LEFT | KEYC_CTRL, 1, &cmd_resize_pane_entry },
# { KEYC_RIGHT | KEYC_CTRL, 1, &cmd_resize_pane_entry },

source ${HOME}/.tmux.solarized.conf.light
# source ${HOME}/.tmux.solarized.conf.dark

# source '/usr/share/tmux/powerline.conf'
# source ${HOME}/.config/dotfiles/submodules/powerline/powerline/bindings/tmux/powerline.conf

# global options
set-option -g           prefix                  C-a
set-option -g           prefix2                 C-Space
# set-option -g           default-terminal        screen-256color-it
set-option -g           default-terminal        rxvt-unicode-256color
set-option -g           status-keys             vi
set-option -g           quiet                   on
set-option -g           visual-bell             off
set-option -g           bell-on-alert           on
set-option -g           bell-action             any
set-option -g           display-time            5000
set-option -g           history-limit           10000
set-option -g           main-pane-width         100
set-option -g -a        update-environment      " XAUTHORITY DBUS_SESSION_BUS_ADDRESS"

# server options
set-option -g -s        base-index              1
set-option -g -s        pane-base-index         1
set-option -g -s        escape-time             0
set-option -g           repeat-time             625
set-option -g           mouse-utf8              on
set-option -g           set-titles              on
set-option -g           renumber-windows        on
# set-option -g           mouse-resize-pane       on
# set-option -g           mouse-select-pane       on
# set-option -g           mouse-select-window     on


# window options
set-window-option -g    utf8                    on
set-window-option -g    mode-keys               vi
set-window-option -g    automatic-rename        on
set-window-option -g    aggressive-resize       on

set-option -g           status                  on
set-option -g           status-utf8             on
set-option -g           status-interval         60
# set-option -g           status-right-length     100

set-option -g           status-position         top
set-option -g           status-justify          left

set-option -g           status-left-length      100
set-option -g           status-right-length     150

# set-option -g           status-left            "#[fg=#839496]<#{client_last_session}> [#S]:"
set-option -g           status-left            "#[fg=colour166]#h #[fg=#839496]: <#{client_last_session}> [#S] :"
set-option -g           status-right           "#[fg=#839496]#(zsh -i -c \'updateWeather; print -P \${reply[3]}\') | #(whoami)@#h | %A, %d. %B %Y | %H:%M"
# set-option -g           status-right            '#(~/dotfiles/submodules/powerline/scripts/powerline tmux)'

set-option -g           set-titles-string      "tmux:#S:#W - #h"

# set-option -g status                            on
# set-option -g status-interval                   2
# set-option -g status-justify                    "centre"
# set-option -g status-left-length                60
# set-option -g status-right-length               90
# set-option -g status-left                       "#(~/.config/dotfiles/submodules/tmux-powerline/powerline.sh left)"
# set-option -g status-right                      "#(~/.config/dotfiles/submodules/tmux-powerline/powerline.sh right)"
# set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]|#[fg=colour255, bg=colour27] #I | #W #[fg=colour27, bg=colour235]|"

set-option -g           window-status-format         '<#I:#W #F>'
set-option -g           window-status-current-format '[#I:#W #F]'


# status bar information on right-hand side
# set-option -g status-right '%a %b %d, %H:%M'
# set-option -g status-right "#(echo -n \"`TERM=vt100; zsh -c 'source ~/.zshrc; updateWeather; updateBattery; updatePrompt; buildPrompt; print -P \${RPROMPT}'`\" | tr -d '\n')"
#if-shell '[ -n "$XWORKSPACE" ]' 'set-option -g status-left "[$XWORKSPACE]"'

# bind                    a           send-prefix
# bind                    `           send-prefix
bind                    '~'           send-prefix -2
bind                      `         last-window
bind                    C-a         last-window
bind                    a           switch-client -l
# # bind -n                 M-C-a       last-window
bind                    C-c         new-window -c "#{pane_current_path}"
# # bind -n                 M-C-c       new-window
# bind -n                 C-d         send C-d\; detach-client
bind                    C-d         detach-client
# # bind -n                 M-C-d       detach-client
bind                    K           choose-session "kill-session -t %%"
bind                    t           choose-tree -u
# # bind -n                 M-C-k       choose-session "kill-session -t %%"

# Paste from X clipboard
bind                    P           run "xclip -o | tmux load-buffer - ; \
                                         tmux paste-buffer"
# bind -n                 M-C-p       run "xclip -o | tmux load-buffer - ; \
#                                         tmux paste-buffer"

# Copy paste buffer to X clipboard
bind                    y           run "tmux show-buffer | xclip -i"
# bind -n                 M-C-y       run "tmux show-buffer | xclip -i"

bind                    Escape      copy-mode
bind -t vi-copy         Escape      cancel
bind -t vi-choice       Escape      cancel
bind -c -t vi-edit      Escape      cancel
bind -c -t vi-edit      C-u         delete-line

# bind o select-pane -t :.+
unbind                  o
bind                    o           break-pane
# bind -n                 M-C-o       break-pane

bind                    O           choose-window "join-pane -s %%"
# bind                    C-o         choose-window "join-pane -s %%"
# bind -n                 M-C-O       choose-window "join-pane -s %%"

# bind r refresh-client
unbind                  r
bind -r                 r           rotate-window -D
bind -r                 C-r         rotate-window -D
# bind -n                 M-C-r       rotate-window -D
bind -r                 R           rotate-window -U
# bind -n                 F13         rotate-window -U

# default bind L switch-client -l
unbind                  L
bind -r                 L           next-layout
# bind -r                 C-l         next-layout
# bind -n                 F12         next-layout

# default: bind Space next-layout
# unbind                  Space
bind -r                 C-Space     next-window
bind -r                   Space     next-window
# bind -r                 Space       next-layout
# bind -n                 M-C-Space   next-window

# default: bind n next-window
unbind                  n
bind -r                 n           next-window
bind -r                 C-n         next-window
# bind -n                 M-C-n       next-window

unbind                  u
bind -r                 u           next-window -a
bind -r                 C-u         next-window -a
# bind -n                 M-C-n       next-window

# default: bind p previous-window
unbind                  p
bind -r                 p           previous-window
bind -r                 C-p         previous-window
# bind -n                 M-C-p       previous-window

unbind                  U
bind -r                 U           previous-window -a
bind -r                 C-U         previous-window -a
# bind -n                 M-C-n       next-window

bind -r                 BSpace      previous-window

# C-Tab is bound to F17 in urxvt; C-S-Tab to F18; see also .Xresources
bind -r                 F17         last-pane
bind -r                 Tab         select-pane -t:.+
bind -r                 BTab        select-pane -t:.-
# bind -n                 M-Tab       select-pane -t:.+
# bind -n                 M-BTab      select-pane -t:.-
# bind -n                 M-F19       select-pane -t:.+

# bind s choose-session
unbind                  s
bind                    s           split-window -v -c "#{pane_current_path}"
# bind -n                 M-C-s       split-window -v

unbind                  v
bind                    v           split-window -h -c "#{pane_current_path}"
# bind -n                 M-C-v       split-window -h

# hjkl movement
bind -r                 j           select-pane -D
# bind -n                 M-j         select-pane -D
bind -r                 k           select-pane -U
# bind -n                 M-k         select-pane -U
bind -r                 h           select-pane -L
# bind -n                 M-h         select-pane -L
# default: bind l last-window
unbind                  l
bind -r                 l           select-pane -R
# bind -n                 M-l         select-pane -R

# default: bind , command-prompt -I #W "rename-window '%%'"
# unbind                  ,
# bind -r                 ,           resize-pane -L 5
# bind -n                 F14         resize-pane -L 5
# default: bind . command-prompt "move-window -t '%%'"
# unbind                  .
# bind -r                 .           resize-pane -R 5
# bind -n                 F15         resize-pane -R 5
# default: bind - delete-buffer
# unbind                  -
# bind -r                 -           resize-pane -D 5
# bind -n                 F17         resize-pane -D 5
# default: bind = choose-buffer
# unbind                  =
# bind -r                 =           resize-pane -U 5
# bind -n                 F18         resize-pane -U 5

bind -r                 C-h         resize-pane -L 5
# bind -n               M-H           resize-pane -L 5
bind -r                 C-l         resize-pane -R 5
# bind -n               M-L           resize-pane -R 5
bind -r                 C-j         resize-pane -D 5
# bind -n               M-J           resize-pane -D 5
bind -r                 C-k         resize-pane -U 5
# bind -n               M-K           resize-pane -U 5

bind -r                   J         swap-pane -D
unbind                    }
bind -r                   }         swap-pane -D
bind -r                   K         swap-pane -U
unbind                    {
bind -r                   {         swap-pane -U

bind                      c         new-window -c "#{pane_current_path}"
bind                    C-c         new-window -c "#{pane_current_path}"

bind                      d         detach-client
bind                    C-d         detach-client
bind                      D         choose-client # 'detach-client -t %%'

bind                    :           command-prompt

bind                      m         set monitor-activity
bind                      M         command-prompt -I '10' -p 'alert after silent for' 'set monitor-silence %%'
bind                    C-m         command-prompt -I '*' -p 'watch out for fnmatch pattern' 'set monitor-content %%'

bind                      C         command-prompt -I '#W' -p 'create new window' 'new-window %%'
bind                      S         command-prompt -p 'create new session' 'new-session -s %%'

bind                      '$'       command-prompt -I '#S' -p 'rename #S to' 'rename-session %%'
bind                      ,         command-prompt -I '#W' -p 'rename #W to' 'rename-window %%'

bind                    ]           paste-buffer

bind                    0           select-window -T -t 0
bind                    1           select-window -T -t 1
bind                    2           select-window -T -t 2
bind                    3           select-window -T -t 3
bind                    4           select-window -T -t 4
bind                    5           select-window -T -t 5
bind                    6           select-window -T -t 6
bind                    7           select-window -T -t 7
bind                    8           select-window -T -t 8
bind                    9           select-window -T -t 9
